<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="forest.xsl"?>
<tree expanded="true" show-heading="true" show-metadata="true" toc="false" root="false"><frontmatter> <anchor>251</anchor>  <taxon>Lemma</taxon> <addr>BMT-d015</addr> <source-path>/Users/connorlockhart/Documents/GitHub/ModelTheoryWiki/monster-main/trees/Basic Model Theory/BMT-d015.tree</source-path> <route>BMT-d015.xml</route> <date><year>2024</year> <month>2</month> <day>27</day></date> <authors><author><link href="connor-lockhart.xml" type="local">Connor Lockhart</link></author> </authors> <title>Elimination of Atomic Formulas</title> </frontmatter> <mainmatter><p>Let <tex>K</tex> be a class of <tex>L</tex> structures and <tex>\Phi</tex> be a set of <tex>L</tex>-formulas. Denote <tex>\Phi ^-</tex> as the set of negations of formulas in <tex>\Phi</tex>.</p><p>Suppose that 
  <ol><li>every atomic formula of <tex>L</tex> is in <tex>\Phi</tex> and</li> 
    <li>for every formula <tex>\theta ( \overline {x})</tex> of <tex>L</tex> which is of the form <tex>\exists  y  \bigwedge _{i&lt;n}  \psi _i ( \overline {x},y)</tex> with each <tex>\psi _i  \in   \Phi \cup   \Phi ^-</tex>, there is an <tex>L</tex>-formula <tex>\theta ^*( \overline {x})</tex> which is a boolean combination of formulas in <tex>\Phi</tex> and is equivalent to <tex>\theta</tex> in every structure in <tex>K</tex>.</li></ol>
  Then <tex>\Phi</tex> is an elimination set of <tex>K</tex></p></mainmatter> <backmatter><contributions/> <context><tree expanded="false" show-heading="true" show-metadata="true" toc="false" root="false"><frontmatter> <anchor>252</anchor>  <taxon>Section</taxon> <addr>BMT-s003</addr> <source-path>/Users/connorlockhart/Documents/GitHub/ModelTheoryWiki/monster-main/trees/Basic Model Theory/BMT-s003.tree</source-path> <route>BMT-s003.xml</route> <date><year>2024</year> <month>2</month> <day>8</day></date> <authors><author><link href="connor-lockhart.xml" type="local">Connor Lockhart</link></author> </authors> <title>Quantifier Elimination</title> </frontmatter> <mainmatter><p>Quantifier Elimination is a part of a broader technique in Model Theory where for a structure in a given language, an arbitrary formula can be written as a boolean combination of perhaps simpler formulas</p><tree expanded="true" show-heading="true" show-metadata="false" toc="true" root="false"><frontmatter><trail><crumb>1</crumb></trail> <anchor>253</anchor>  <taxon>Definition</taxon> <addr>BMT-d014</addr> <source-path>/Users/connorlockhart/Documents/GitHub/ModelTheoryWiki/monster-main/trees/Basic Model Theory/BMT-d014.tree</source-path> <route>BMT-d014.xml</route> <date><year>2024</year> <month>2</month> <day>27</day></date> <authors><author><link href="connor-lockhart.xml" type="local">Connor Lockhart</link></author> </authors> <title>Elimination Set</title> </frontmatter> <mainmatter><p>An <em>Elimination Set</em> for a language <tex>\mathcal {L}</tex> and class <tex>K</tex> of <tex>\mathcal {L}</tex>-structures, then a set <tex>\Gamma</tex> of formulas <tex>\phi</tex> is an elimination set for <tex>K</tex> if for every formula <tex>\phi ( \bar {x})</tex> of <tex>\mathcal {L}</tex> there is a formula <tex>\phi ^*( \bar {x})</tex> which is a boolean combinations of formulas in <tex>\Gamma</tex> and <tex>\phi</tex> is equivalent to <tex>\phi ^*</tex> in every structure in <tex>K</tex></p></mainmatter> </tree><p>In particular, we will be most interested in elimination sets that are comprised of the set of quantifier free formulas. It is worth noting that, in some cases it is not possible to have a full quantifier elimination down to the level of a quantifier free set but perhaps we can restrict ourself to some reasonable set of formulas.</p><p>Frequently, we use the following lemma to simplify the task of showing that <tex>\Phi</tex> is an elimination set</p><p>The art of quantifier elimination lies in choosing an appropriate elimination set that allows the above lemma to be used with minimal obstructions. </p></mainmatter> </tree></context> <related/> <backlinks/> <references/></backmatter></tree>